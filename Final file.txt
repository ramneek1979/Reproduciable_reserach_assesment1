# Reproducible Research: Peer Assessment 1



## Loading and preprocessing the data
##### 1. Load the data (i.e. read.csv())

```{r}
data <- read.csv("activity.csv")
str(data)
head(data)
```

## What is mean total number of steps taken per day?

```{r}
attach(data)
totalPerDay <- tapply(steps,list(date),sum,na.rm=TRUE)
detach(data)

```

##### 1. Make a histogram of the total number of steps taken each day

```{r}
hist(totalPerDay,breaks=10)
```



##### 2. Calculate and report the mean and median total number of steps taken per day

```{r}
meanPerDay = mean(totalPerDay,na.rm = TRUE)
meanPerDay
medianPerDay <- median(totalPerDay,na.rm = TRUE)
medianPerDay
```


-----

## What is the average daily activity pattern?

```{r}
attach(data)
meanEvery5min <- tapply(steps,list(interval),mean,na.rm=TRUE)
detach(data)
```

##### 1. Make a time series plot

```{r}
plot(meanEvery5min,type="l")
```

##### 2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?

```{r}
which.max(meanEvery5min)
meanEvery5min[104]
max(meanEvery5min)
```

## Imputing missing values
##### 1. Calculate and report the total number of missing values in the dataset 

```{r}
calMissing <- sum(is.na(data$steps))
calMissing
```

##### 2. Devise a strategy for filling in all of the missing values in the dataset.
##### 3. Create a new dataset that is equal to the original dataset but with the missing data filled in.

```{r}

na <- is.na(data$steps)
shiftmeanEvery5min <- c(meanEvery5min[288],meanEvery5min[1:287])
imputedSteps <- rep(0,length(data$steps))
for (i in 1:length(data$steps))
{
  if(na[i])
    {
      imputedSteps[i] <- shiftmeanEvery5min[i%%length(meanEvery5min)+1]
    }
  else
    {
      imputedSteps[i] <- data$steps[i]
    } 
}

#data <- transform(data, data$imputedSteps = imputedSteps)
data <- cbind(data,imputedSteps)
str(data)
head(data)
attach(data)
```

##### 4. Make a histogram of the total number of steps taken each day 

```{r}
totalPerDay2 <- tapply(imputedSteps,list(date),sum)
detach(data)
hist(totalPerDay2,breaks=10)
```

#### ... and Calculate and report the mean and median total number of steps taken per day. 

```{r}
mean(totalPerDay2)
median(totalPerDay2)
```


## Are there differences in activity patterns between weekdays and weekends?
##### 1.Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.

```{r}
#isweekday <- factor(c("weekday", "weekends"))
date <- levels(data$date)
daytype <- weekdays(as.Date(date))
for(i in 1:length(daytype))
  {
    if(daytype[i] %in% c("???", "???", "???", "???", "???"))
      {
        daytype[i] <- "weekday"
      }
    else
      {
        daytype[i] <- "weekend"
      }
  }
daytype <- as.factor(daytype)
isweekday <- rep(daytype,each=length(meanEvery5min))

data <- cbind(data,isweekday)
str(data)
head(data)
attach(data)
```

##### 2.Make a panel plot containing a time series plot


```{r}
daytypeDiff <- aggregate(imputedSteps, list(interval,isweekday), mean)
detach(data)
library(lattice)
xyplot(x ~ Group.1|Group.2,data=daytypeDiff,type="l",layout=c(1,2),xlab="Interval",ylab="Number of Steps")
```